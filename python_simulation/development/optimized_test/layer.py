#!/Users/alessio/anaconda3/bin/python3

from neuron import neuron

# Function that updates an entire layer of neurons modeled with the Leaky
# Integrate and Fire.
#
# INPUT PARAMETERS:
#
# 	1) inEvents is a NumPy array that contains the input events, being
# 	   them generated by a previous layer of neurons or provided by an
#	   external user. The designed network is fully connected and so
#	   all the events are given as an input to each neuron in the layer.
#
# 	2) neuronDictList: list of dictionaries containing the parameters of
# 	   each neuron. See the function "neuron" for more details.
#
# 	3) dt_tau: numerical value representing the ratio delta_t/tau, where
# 	   delta_t is the duration of the time step and tau is the time
# 	   constant of the exponential decay. See the function "neuron" for
# 	   more details.
#
# 	4) outEvents: NumPy array that is filled by the function
# 	   with the values (0 or 1) of the events generated by each
# 	   neuron in the layer.
#
# 	5) currLayerDim: number of neurons in the layer. Needed to dimension
# 	   the loop which updates the layer.
#
# The function updates the membrane potential of each neuron, modifying the
# value contained in its dictionary, and stores its output.

def layer(inEvents, neuronDictList, dt_tau, outEvents, currLayerDim):

	# Loop over all the neurons in the current layer
	for i in range(currLayerDim):

		# Update the neuron and store the outout in the array
		outEvents[i] = neuron(inEvents, neuronDictList[i], dt_tau)


